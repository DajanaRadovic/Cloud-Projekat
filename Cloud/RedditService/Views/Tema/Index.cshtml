@model KorisnikService_Data.EditViewModel

@{
    ViewBag.Title = "Reddit";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="~/Content/Site.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <img src="~/Pictures/profile.jpg" alt="Profil" class="profile-icon" id="profileButton" />
        <img src="~/Pictures/add.jpeg" alt="Tema" class="profile-icon" id="novaTemaButton" />
        <a href="@Url.Action("Logout")"><img src="~/Pictures/logout.png" style="background-color: white; width: 50px !important; width: 50px;" alt="Tema" class="profile-icon" id="logoutButton" /></a>
    </div>

    <!-- Forma za izmenu profila -->
    <div class="form-container" id="editProfileForm">
        @if (ViewBag.Message != null)
        {
            <p style="color: green">@ViewBag.Message</p>
        }
        @using (Html.BeginForm("Index", "Tema", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <h2>Izmeni profil</h2>
            <div>
                <label for="Ime">Ime:</label>
                @Html.TextBoxFor(model => model.Signup.Ime)
            </div>
            <div>
                <label for="Prezime">Prezime:</label>
                @Html.TextBoxFor(model => model.Signup.Prezime)
            </div>
            <div>
                <label for="Adresa">Adresa:</label>
                @Html.TextBoxFor(model => model.Signup.Adresa)
            </div>
            <div>
                <label for="Grad">Grad:</label>
                @Html.TextBoxFor(model => model.Signup.Grad)
            </div>
            <div>
                <label for="Drzava">Država:</label>
                @Html.TextBoxFor(model => model.Signup.Drzava)
            </div>
            <div>
                <label for="BrojTelefona">Broj Telefona:</label>
                @Html.TextBoxFor(model => model.Signup.BrojTelefona)
            </div>
            <div>
                <label for="Email">Email:</label>
                @Html.TextBoxFor(model => model.Signup.Email, new { @readonly = "readonly" })
            </div>
            <div>
                <label for="Lozinka">Lozinka:</label>
                @Html.PasswordFor(model => model.Signup.Lozinka)
            </div>
            <div>
                <label for="Slika">Trenutna slika:</label>
                <img id="currentPreview" src="@Model.Signup.Slika" width="100" height="100" />
                @Html.TextBoxFor(model => model.Signup.Slika)
            </div>
            <div>
                <label for="Slika">Nova slika:</label>
                <input type="file" name="imageFile" id="imageFile" onchange="previewImage(event)" />
            </div>
            <div>
                <input type="submit" value="Ažuriraj profil" />
            </div>
        }
    </div>

    <!-- Forma za dodavanje nove teme -->
    <div class="form-container" id="newTopicForm">
        <h2>Nova tema</h2>
        @using (Html.BeginForm("AddTema", "Tema", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                <label for="Naslov">Naslov:</label>
                @Html.TextBoxFor(model => model.Tema.Naslov)
            </div>
            <div>
                <label for="Sadrzaj">Sadržaj:</label>
                @Html.TextAreaFor(model => model.Tema.Sadrzaj, new { style = "height: 100px;" })
            </div>
            <div>
                <label for="Slika">Slika:</label>
                <input type="file" name="imageFile" id="imageFile" />
            </div>
            <div>
                <input type="submit" value="Kreiraj temu" />
            </div>
        }
    </div>

    <div class="search-sort-container">
        <div style="float: left; width: 50%;">
            <h2>Pretraga</h2>
            <form action="@Url.Action("Search")" method="get" class="search-form">
                <input type="text" name="searchTerm" id="searchTerm" placeholder="Pretraži teme po naslovu">
                <button type="submit">Pretraži</button>
            </form>
        </div>
        <div style="float: left; width: 50%; margin-left: -300px;">
            <h2>Sortiranje</h2>
            <div class="sort-buttons">
                <button type="button" onclick="sort('naslov_asc')" class="sort-button">Sortiraj po naslovu (rastuće)</button>
                <button type="button" onclick="sort('naslov_desc')" class="sort-button">Sortiraj po naslovu (opadajuće)</button>
            </div>
        </div>
        <div style="clear: both;"></div>

        <script>
            function sort(sortOrder) {
                window.location.href = "@Url.Action("Sort")?sortOrder=" + sortOrder;
            }
        </script>
    </div>

    <!-- UserTeme -->
    <h1 style="margin-left: 50px">Moje teme</h1>

    <div class="card-container" id="userTemeContainer">
        <!-- UserTeme will be rendered here -->
        @if (Model.UserTeme != null && Model.UserTeme.Any())
        {
            foreach (var tema in Model.UserTeme)
            {
                <div class="card">
                    @if (!string.IsNullOrEmpty(tema.SlikaUrl))
                    {
                        <img src="@tema.SlikaUrl" alt="Slika teme" style="max-width: 100%;" />
                    }
                    <h2>@tema.Naslov</h2>
                    <p>@tema.Sadrzaj</p>
                    <span>Datum kreiranja: @tema.DatumKreiranja.ToString("dd.MM.yyyy. HH:mm:ss")</span>
                    <p>Upvotes: @tema.Upvotes</p>
                    <p>Downvotes: @tema.Downvotes</p>
                    <p>Kreirao/la: @tema.UserEmail</p>

                    <form action="@Url.Action("Upvote", "Tema")" method="post">
                        <input type="hidden" name="id" value="@tema.RowKey" />
                        <button type="submit" class="vote-button">Upvote</button>
                    </form>

                    <form action="@Url.Action("Downvote", "Tema")" method="post">
                        <input type="hidden" name="id" value="@tema.RowKey" />
                        <button type="submit" class="vote-button">Downvote</button>
                    </form>

                    @if (Model.Pretplate.Any(p => p.TemaId == tema.RowKey))
                    {
                        <form action="/Tema/Unsubscribe" method="post">
                            <input type="hidden" name="temaId" value="@tema.RowKey" />
                            <button type="submit">Unsubscribe</button>
                        </form>
                    }
                    else
                    {
                        <form action="/Tema/Subscribe" method="post">
                            <input type="hidden" name="temaId" value="@tema.RowKey" />
                            <button type="submit">Subscribe</button>
                        </form>
                    }

                    <ul class="comment">
                        @foreach (var komentar in tema.Komentari)
                        {
                            <li>
                                @komentar.Tekst - @komentar.DatumKreiranja.ToString("dd.MM.yyyy. HH:mm:ss") - @komentar.KorisnikId
                                <form action="@Url.Action("DeleteComment", "Tema")" method="post" style="display: inline;">
                                    @Html.Hidden("komentarId", komentar.RowKey)
                                    <button type="submit" style="background: none; border: none; color: red; cursor: pointer;">Obriši</button>
                                </form>
                            </li>
                        }
                    </ul>

                    <form action="@Url.Action("Delete", "Tema")" method="post">
                        @Html.Hidden("id", tema.RowKey)
                        <button type="submit">Obriši temu</button>
                    </form>

                    <!-- Forma za dodavanje komentara -->
                    <form action="@Url.Action("AddComment", "Tema")" method="post">
                        @Html.Hidden("temaId", tema.RowKey)
                        <div>
                            <label for="komentarTekst">Tekst komentara:</label>
                            <textarea name="komentarTekst" id="komentarTekst" required style="color:black"></textarea>
                        </div>
                        <div>
                            <button type="submit">Dodaj komentar</button>
                        </div>
                    </form>
                </div>
            }

        }
        else
        {
            <p>Nemate kreiranih tema.</p>
        }

    </div>
    <!-- Pagination controls -->
    <div class="pagination">
        <button style="max-width: 200px; margin-right: 20px" id="prevUserTeme">Prethodno</button>
        <button style="max-width: 200px" id="nextUserTeme">Sledeće</button>
    </div>

    <!-- Prikaz svih dodatih tema -->
    <h1 style="margin-left: 50px">Sve teme</h1>
    <div class="card-container" id="temeContainer">
        <!-- Teme will be rendered here -->
        @if (Model.Teme != null && Model.Teme.Any())
        {
            foreach (var tema in Model.Teme)
            {
                <div class="card">
                    @if (!string.IsNullOrEmpty(tema.SlikaUrl))
                    {
                        <img src="@tema.SlikaUrl" alt="Slika teme" style="max-width: 100%;" />
                    }
                    <h2>@tema.Naslov</h2>
                    <p>@tema.Sadrzaj</p>
                    <span>Datum kreiranja: @tema.DatumKreiranja.ToString("dd.MM.yyyy. HH:mm:ss")</span>
                    <p>Upvotes: @tema.Upvotes</p>
                    <p>Downvotes: @tema.Downvotes</p>
                    <p>Kreirao/la: @tema.UserEmail</p>

                    <form action="@Url.Action("Upvote", "Tema")" method="post">
                        <input type="hidden" name="id" value="@tema.RowKey" />
                        <button type="submit" class="vote-button">Upvote</button>
                    </form>

                    <form action="@Url.Action("Downvote", "Tema")" method="post">
                        <input type="hidden" name="id" value="@tema.RowKey" />
                        <button type="submit" class="vote-button">Downvote</button>
                    </form>

                    @if (Model.Pretplate.Any(p => p.TemaId == tema.RowKey))
                    {
                        <form action="/Tema/Unsubscribe" method="post">
                            <input type="hidden" name="temaId" value="@tema.RowKey" />
                            <button type="submit">Unsubscribe</button>
                        </form>
                    }
                    else
                    {
                        <form action="/Tema/Subscribe" method="post">
                            <input type="hidden" name="temaId" value="@tema.RowKey" />
                            <button type="submit">Subscribe</button>
                        </form>
                    }

                    <ul class="comment">
                        @foreach (var komentar in tema.Komentari)
                        {
                            <li>
                                @komentar.Tekst - @komentar.DatumKreiranja.ToString("dd.MM.yyyy. HH:mm:ss") - @komentar.KorisnikId
                                <form action="@Url.Action("DeleteComment", "Tema")" method="post" style="display: inline;">
                                    @Html.Hidden("komentarId", komentar.RowKey)
                                    <button type="submit" style="background: none; border: none; color: red; cursor: pointer;">Obriši</button>
                                </form>
                            </li>
                        }
                    </ul>

                    <form action="@Url.Action("Delete", "Tema")" method="post">
                        @Html.Hidden("id", tema.RowKey)
                        <button type="submit">Obriši temu</button>
                    </form>

                    <!-- Forma za dodavanje komentara -->
                    <form action="@Url.Action("AddComment", "Tema")" method="post">
                        @Html.Hidden("temaId", tema.RowKey)
                        <div>
                            <label for="komentarTekst">Tekst komentara:</label>
                            <textarea name="komentarTekst" id="komentarTekst" required style="color:black"></textarea>
                        </div>
                        <div>
                            <button type="submit">Dodaj komentar</button>
                        </div>
                    </form>
                </div>
            }
        }
    </div>
    <!-- Pagination controls -->
    <div class="pagination" style="margin-bottom: 100px">
        <button style="max-width: 200px; margin-right: 20px" id="prevTeme">Prethodno</button>
        <button style="max-width: 200px" id="nextTeme">Sledeće</button>
    </div>



    <!-- JavaScript for pagination -->
    <script>
        var userTemePage = 0;
        var temePage = 0;
        var postsPerPage = 3;

        function renderUserTeme() {
            var userTemeCards = document.querySelectorAll('#userTemeContainer .card');
            for (var i = 0; i < userTemeCards.length; i++) {
                userTemeCards[i].style.display = 'none';
            }

            var startIndex = userTemePage * postsPerPage;
            var endIndex = startIndex + postsPerPage;
            for (var i = startIndex; i < endIndex; i++) {
                if (userTemeCards[i]) {
                    userTemeCards[i].style.display = 'block';
                }
            }
        }

        function renderTeme() {
            var temeCards = document.querySelectorAll('#temeContainer .card');
            for (var i = 0; i < temeCards.length; i++) {
                temeCards[i].style.display = 'none';
            }

            var startIndex = temePage * postsPerPage;
            var endIndex = startIndex + postsPerPage;
            for (var i = startIndex; i < endIndex; i++) {
                if (temeCards[i]) {
                    temeCards[i].style.display = 'block';
                }
            }
        }

        document.getElementById('prevUserTeme').addEventListener('click', function() {
            if (userTemePage > 0) {
                userTemePage--;
                renderUserTeme();
            }
        });

        document.getElementById('nextUserTeme').addEventListener('click', function() {
            if ((userTemePage + 1) * postsPerPage < @Model.UserTeme.Count) {
                userTemePage++;
                renderUserTeme();
            }
        });

        document.getElementById('prevTeme').addEventListener('click', function() {
            if (temePage > 0) {
                temePage--;
                renderTeme();
            }
        });

        document.getElementById('nextTeme').addEventListener('click', function() {
            if ((temePage + 1) * postsPerPage < @Model.Teme.Count) {
                temePage++;
                renderTeme();
            }
        });

        // Initial rendering
        renderUserTeme();
        renderTeme();
    </script>

    <!-- JavaScript for switching between forms -->
    <script>
        document.getElementById("profileButton").addEventListener("click", function () {
            var form = document.getElementById("editProfileForm");
            if (form.style.display === "block") {
                form.style.display = "none";
            } else {
                form.style.display = "block";
                document.getElementById("newTopicForm").style.display = "none";
            }
        });

        document.getElementById("novaTemaButton").addEventListener("click", function () {
            var form = document.getElementById("newTopicForm");
            if (form.style.display === "block") {
                form.style.display = "none";
            } else {
                form.style.display = "block";
                document.getElementById("editProfileForm").style.display = "none";
            }
        });
    </script>
</body>
</html>

